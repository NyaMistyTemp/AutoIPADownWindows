# vim: expandtab tabstop=2 shiftwidth=2
name: Download IPA

env:
  appUrl: "https://apps.apple.com/jp/app/id1377018522"
  appStore: "jp"
  appName: "allstars"
  PYTHONIOENCODING: utf-8

on: 
  push:
  schedule:
    - cron: '30 * * * *'
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with ngrok debugging enabled'
        required: false
        default: false
  repository_dispatch:

jobs:
  ipa_update:
    name: 'Update IPA'
    runs-on: "windows-latest"
    steps:
      - name: Set up git repository
        uses: actions/checkout@v2
      - name: Pre check version
        id: check
        run: |
            pip3 install requests
            if python3 workflow_helper/iTunesDownload/precheck_version.py ${{ env.appStore }} ${{ env.appUrl }}; then
                echo "Version updated! Continue to download!"
                echo '::set-output name=NEED_UPDATE::1'
            else
                echo "Version unchanged! Relax~"
                echo '::set-output name=NEED_UPDATE::0'
            fi
        shell: bash
        
      - name: Setup iTunes
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        run: |
          echo ${{ steps.check.outputs.NEED_UPDATE }}
          workflow_helper\iTunesInstall\install_itunes.bat
      
      - uses: NyaMisty/reverse-rdp-windows-github-actions-ng@master
        if: ${{ always() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          ngrok-token: ${{ secrets.NGROK_AUTH_TOKEN }}
          password: Aa123456
          foreground: true

      - name: Login iTunes
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        env:
          APPLEID: ${{ secrets.APPLEID }}
          APPLEID_PWD: ${{ secrets.APPLEID_PWD }}
        run: |
            pip3 install pywinauto
            python3 workflow_helper/itunes_auto_login.py %APPLEID% %APPLEID_PWD%
        shell: cmd
      
      - name: Download ipa
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        run: |
            pip3 install frida
            python3 workflow_helper\iTunesDownload\download_ipa.py ${{ env.appStore }} ${{ env.appUrl }} ${{ env.appName }}
            mkdir ${{ runner.temp }}\ipaDown
            move *.ipa ${{ runner.temp }}\ipaDown
            move *.sinf ${{ runner.temp }}\ipaDown
      - uses: NyaMisty/reverse-rdp-windows-github-actions-ng@master
        if: ${{ always() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          ngrok-token: ${{ secrets.NGROK_AUTH_TOKEN }}
          password: Aa123456
      #- name: "Upload package"
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: ${{ env.appName }}.ipa
      #    path: ${{ runner.temp }}\ipaDown\${{ env.appName }}.ipa
      - name: Split ipa
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        run: split --bytes=1879048192 --suffix-length=3 --numeric-suffix ${{ env.appName }}.ipa ${{ env.appName }}.ipa.
        working-directory: ${{ runner.temp }}\ipaDown
        shell: bash
      - name: Get current version
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        id: curver
        run: echo "::set-output name=curver::$(cat curver.txt)"
        shell: bash
      #- name: Create tag     
      #  uses: actions/github-script@v3
      #  with:
      #    github-token: ${{ github.token }}
      #    script: |
      #      github.git.createRef({
      #        owner: context.repo.owner,
      #        repo: context.repo.repo,
      #        ref: "refs/tags/${{ env.appName }}-${{ steps.curver.outputs.curver }}",
      #        sha: context.sha
      #      })
      #- name: Pushing to release
      #  uses: softprops/action-gh-release@v1
      #  with:
      #    files: ${{ runner.temp }}\ipaDown\${{ env.appName }}.ipa.*
      #    tag_name: "${{ env.appName }}-${{ steps.curver.outputs.curver }}"
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pushing to release
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        uses: ncipollo/release-action@v1
        with:
          name: "${{ env.appName }}-${{ steps.curver.outputs.curver }}"
          commit: ${{ github.sha }}
          tag: "${{ env.appName }}-${{ steps.curver.outputs.curver }}"
          artifacts: ${{ runner.temp }}\ipaDown\${{ env.appName }}.ipa.*,${{ runner.temp }}\ipaDown\${{ env.appName }}.sinf
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit ver change
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add curver.txt
          git commit -m "Updating app to ver ${{ steps.curver.outputs.curver }}" -a
        shell: bash
      - name: Push changes
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}